reincarnation.Failuer: Compile Error
=================================================
/reincarnation/decompiler/array/IntArrayTest.java:17: エラー: '.class'がありません
            for (int i : int[] local4) {
                               ^
/reincarnation/decompiler/array/IntArrayTest.java:17: エラー: ';'がありません
            for (int i : int[] local4) {
                                     ^

-------------------------------------------------
01    package reincarnation.decompiler.array;
02    
03    import reincarnation.CodeVerifier;
04    import reincarnation.TestCode.IntParam;
05    import reincarnation.decompiler.array.IntArrayTest;
06    
07    public class IntArrayTest extends CodeVerifier {
08    
09        class IntArrayTest$15 implements IntParam {
10    
11            IntArrayTest$15(final IntArrayTest this$0) {
12            }
13    
14            public int run(int value) {
15                int sum = 0;
16                int[] array = new int[] {1, 2, 3};
17                for (int i : int[] local4) {
18                    if (i == 1) {
19                        ++sum;
20                        // 7 -> 6 continue to 3 (1 of 2) Loop[entrance=3, first=A, exit=4, check=6]
21                        continue;
22                    }
23                    // 5 -> 6 continue to 3 (2 of 2) Loop[entrance=3, first=A, exit=4, check=6]
24                }
25                return sum;
26            }
27        }
28    }
=================================================
	at reincarnation.Failuer.type(Failuer.java:38)
	at reincarnation.CodeVerifier.verify(CodeVerifier.java:183)
	at reincarnation.decompiler.array.IntArrayTest.ArrayForEach(IntArrayTest.java:213)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at antibug.powerassert.PowerAssert.capture(PowerAssert.java:62)
	at java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:194)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
	Suppressed: Fail compiling code.
No solution.
	Suppressed: reincarnation.Failuer: Fail to cross-decompile.
-----------------------------------------------------------------------
  Javac version - reincarnation.decompiler.array.IntArrayTest$15
-----------------------------------------------------------------------
public class IntArrayTest$15Dump implements Opcodes {

public static byte[] dump () throws Exception {

classWriter.visit(V21, ACC_SUPER, "reincarnation/decompiler/array/IntArrayTest$15", null, "java/lang/Object", new String[] { "reincarnation/TestCode$IntParam" });

{
methodVisitor = classWriter.visitMethod(0, "<init>", "(Lreincarnation/decompiler/array/IntArrayTest;)V", null, null);
methodVisitor.visitParameter("NoParameterName", ACC_FINAL | ACC_MANDATED);
methodVisitor.visitCode();
Label label0 = new Label();
methodVisitor.visitLabel(label0);
methodVisitor.visitLineNumber(213, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
methodVisitor.visitInsn(RETURN);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitLocalVariable("this", "Lreincarnation/decompiler/array/IntArrayTest$15;", null, label0, label1, 0);
methodVisitor.visitLocalVariable("this$0", "Lreincarnation/decompiler/array/IntArrayTest;", null, label0, label1, 1);
methodVisitor.visitMaxs(1, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "run", "(I)I", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
methodVisitor.visitLabel(label0);
methodVisitor.visitLineNumber(216, label0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 2);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitLineNumber(217, label1);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitVarInsn(ASTORE, 3);
Label label2 = new Label();
methodVisitor.visitLabel(label2);
methodVisitor.visitLineNumber(219, label2);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitVarInsn(ASTORE, 4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitVarInsn(ISTORE, 5);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 6);
Label label3 = new Label();
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_NEW, 7, new Object[] {"reincarnation/decompiler/array/IntArrayTest$15", Opcodes.INTEGER, Opcodes.INTEGER, "[I", "[I", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 6);
methodVisitor.visitVarInsn(ILOAD, 5);
Label label4 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPGE, label4);
methodVisitor.visitVarInsn(ALOAD, 4);
methodVisitor.visitVarInsn(ILOAD, 6);
methodVisitor.visitInsn(IALOAD);
methodVisitor.visitVarInsn(ISTORE, 7);
Label label5 = new Label();
methodVisitor.visitLabel(label5);
methodVisitor.visitLineNumber(220, label5);
methodVisitor.visitVarInsn(ILOAD, 7);
methodVisitor.visitInsn(ICONST_1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label6);
Label label7 = new Label();
methodVisitor.visitLabel(label7);
methodVisitor.visitLineNumber(221, label7);
methodVisitor.visitIincInsn(2, 1);
methodVisitor.visitLabel(label6);
methodVisitor.visitLineNumber(219, label6);
methodVisitor.visitFrame(Opcodes.F_NEW, 7, new Object[] {"reincarnation/decompiler/array/IntArrayTest$15", Opcodes.INTEGER, Opcodes.INTEGER, "[I", "[I", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
methodVisitor.visitIincInsn(6, 1);
methodVisitor.visitJumpInsn(GOTO, label3);
methodVisitor.visitLabel(label4);
methodVisitor.visitLineNumber(224, label4);
methodVisitor.visitFrame(Opcodes.F_NEW, 4, new Object[] {"reincarnation/decompiler/array/IntArrayTest$15", Opcodes.INTEGER, Opcodes.INTEGER, "[I"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 2);
methodVisitor.visitInsn(IRETURN);
Label label8 = new Label();
methodVisitor.visitLabel(label8);
methodVisitor.visitLocalVariable("i", "I", null, label5, label6, 7);
methodVisitor.visitLocalVariable("this", "Lreincarnation/decompiler/array/IntArrayTest$15;", null, label0, label8, 0);
methodVisitor.visitLocalVariable("value", "I", null, label0, label8, 1);
methodVisitor.visitLocalVariable("sum", "I", null, label1, label8, 2);
methodVisitor.visitLocalVariable("array", "[I", null, label2, label8, 3);
methodVisitor.visitMaxs(4, 8);
methodVisitor.visitEnd();
}

}
}
-----------------------------------------------------------------------
  ECJ version - reincarnation.decompiler.array.IntArrayTest$15
-----------------------------------------------------------------------
public class IntArrayTest$15Dump implements Opcodes {

public static byte[] dump () throws Exception {

classWriter.visit(V21, ACC_SUPER, "reincarnation/decompiler/array/IntArrayTest$15", null, "java/lang/Object", new String[] { "reincarnation/TestCode$IntParam" });

{
fieldVisitor = classWriter.visitField(ACC_FINAL | ACC_SYNTHETIC, "this$0", "Lreincarnation/decompiler/array/IntArrayTest;", null, null);
fieldVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(0, "<init>", "(Lreincarnation/decompiler/array/IntArrayTest;)V", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
methodVisitor.visitLabel(label0);
methodVisitor.visitLineNumber(213, label0);
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitVarInsn(ALOAD, 1);
methodVisitor.visitFieldInsn(PUTFIELD, "reincarnation/decompiler/array/IntArrayTest$15", "this$0", "Lreincarnation/decompiler/array/IntArrayTest;");
methodVisitor.visitVarInsn(ALOAD, 0);
methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
methodVisitor.visitInsn(RETURN);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitLocalVariable("this", "Lreincarnation/decompiler/array/IntArrayTest$15;", null, label0, label1, 0);
methodVisitor.visitMaxs(2, 2);
methodVisitor.visitEnd();
}
{
methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "run", "(I)I", null, null);
methodVisitor.visitCode();
Label label0 = new Label();
methodVisitor.visitLabel(label0);
methodVisitor.visitLineNumber(216, label0);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 2);
Label label1 = new Label();
methodVisitor.visitLabel(label1);
methodVisitor.visitLineNumber(217, label1);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitIntInsn(NEWARRAY, T_INT);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_1);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitInsn(DUP);
methodVisitor.visitInsn(ICONST_2);
methodVisitor.visitInsn(ICONST_3);
methodVisitor.visitInsn(IASTORE);
methodVisitor.visitVarInsn(ASTORE, 3);
Label label2 = new Label();
methodVisitor.visitLabel(label2);
methodVisitor.visitLineNumber(219, label2);
methodVisitor.visitVarInsn(ALOAD, 3);
methodVisitor.visitInsn(DUP);
methodVisitor.visitVarInsn(ASTORE, 7);
methodVisitor.visitInsn(ARRAYLENGTH);
methodVisitor.visitVarInsn(ISTORE, 6);
methodVisitor.visitInsn(ICONST_0);
methodVisitor.visitVarInsn(ISTORE, 5);
Label label3 = new Label();
methodVisitor.visitJumpInsn(GOTO, label3);
Label label4 = new Label();
methodVisitor.visitLabel(label4);
methodVisitor.visitFrame(Opcodes.F_NEW, 8, new Object[] {"reincarnation/decompiler/array/IntArrayTest$15", Opcodes.INTEGER, Opcodes.INTEGER, "[I", Opcodes.TOP, Opcodes.INTEGER, Opcodes.INTEGER, "[I"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ALOAD, 7);
methodVisitor.visitVarInsn(ILOAD, 5);
methodVisitor.visitInsn(IALOAD);
methodVisitor.visitVarInsn(ISTORE, 4);
Label label5 = new Label();
methodVisitor.visitLabel(label5);
methodVisitor.visitLineNumber(220, label5);
methodVisitor.visitVarInsn(ILOAD, 4);
methodVisitor.visitInsn(ICONST_1);
Label label6 = new Label();
methodVisitor.visitJumpInsn(IF_ICMPNE, label6);
Label label7 = new Label();
methodVisitor.visitLabel(label7);
methodVisitor.visitLineNumber(221, label7);
methodVisitor.visitIincInsn(2, 1);
methodVisitor.visitLabel(label6);
methodVisitor.visitLineNumber(219, label6);
methodVisitor.visitFrame(Opcodes.F_NEW, 8, new Object[] {"reincarnation/decompiler/array/IntArrayTest$15", Opcodes.INTEGER, Opcodes.INTEGER, "[I", Opcodes.TOP, Opcodes.INTEGER, Opcodes.INTEGER, "[I"}, 0, new Object[] {});
methodVisitor.visitIincInsn(5, 1);
methodVisitor.visitLabel(label3);
methodVisitor.visitFrame(Opcodes.F_NEW, 8, new Object[] {"reincarnation/decompiler/array/IntArrayTest$15", Opcodes.INTEGER, Opcodes.INTEGER, "[I", Opcodes.TOP, Opcodes.INTEGER, Opcodes.INTEGER, "[I"}, 0, new Object[] {});
methodVisitor.visitVarInsn(ILOAD, 5);
methodVisitor.visitVarInsn(ILOAD, 6);
methodVisitor.visitJumpInsn(IF_ICMPLT, label4);
Label label8 = new Label();
methodVisitor.visitLabel(label8);
methodVisitor.visitLineNumber(224, label8);
methodVisitor.visitVarInsn(ILOAD, 2);
methodVisitor.visitInsn(IRETURN);
Label label9 = new Label();
methodVisitor.visitLabel(label9);
methodVisitor.visitLocalVariable("this", "Lreincarnation/decompiler/array/IntArrayTest$15;", null, label0, label9, 0);
methodVisitor.visitLocalVariable("value", "I", null, label0, label9, 1);
methodVisitor.visitLocalVariable("sum", "I", null, label1, label9, 2);
methodVisitor.visitLocalVariable("array", "[I", null, label2, label9, 3);
methodVisitor.visitLocalVariable("i", "I", null, label5, label6, 4);
methodVisitor.visitMaxs(4, 8);
methodVisitor.visitEnd();
}

}
}
		at reincarnation.Failuer.type(Failuer.java:38)
		at reincarnation.CodeVerifier.verify(CodeVerifier.java:226)
		... 9 more

